<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context     
	http://www.springframework.org/schema/context/spring-context.xsd     
	http://www.springframework.org/schema/aop     
	http://www.springframework.org/schema/aop/spring-aop.xsd     
	http://www.springframework.org/schema/tx      
	http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 使用 annotation -->
	<context:annotation-config />

	<!-- 使用 annotation 自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 -->
	<context:component-scan base-package="com.hansight" />

	<!-- c3p0 connection pool configuration -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="maxStatements" value="100" />
		<property name="maxIdleTime" value="3600" />
		<property name="acquireIncrement" value="2" />
		<property name="acquireRetryAttempts" value="10" />
		<property name="acquireRetryDelay" value="600" />
		<property name="testConnectionOnCheckin" value="true" />
		<property name="idleConnectionTestPeriod" value="1200" />
		<property name="checkoutTimeout" value="10000" />
<!-- 		<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" /> -->
	</bean>


	<!-- 注册Mybatis映射器 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="org.yuqieshi.frame.web.dao" /> <property 
		name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> </bean> -->

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="packagesToScan" value="com.hansight" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
	<jpa:repositories base-package="com.hansight.deploy.dao"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- 使用annotation定义事务 <tx:annotation-driven transaction-manager="transactionManager" 
		proxy-target-class="true" /> -->

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="mod*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="newServicesPointcut"
			expression="execution(* com.hansight.*.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="newServicesPointcut" />
	</aop:config>

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

</beans>